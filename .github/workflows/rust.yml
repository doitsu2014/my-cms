name: build and test cms

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    # defaults:
    #   run:
    #     working-directory: ./
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: clean
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --no-fail-fast # Customize args for your own needs
        env:
          CARGO_INCREMENTAL: "0"
          RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"
          RUSTDOCFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"
      - id: coverage
        uses: actions-rs/grcov@v0.1.5
        with:
          config: .github/action-rs/grcov.yml

      # - name: Build
      #   run: cargo build
      # - name: Run tests
      #   run: cargo test
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ${{ steps.coverage.outputs.report }}
  # sonar_cloud:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Install Rust
  #     run: rustup update stable
  #   - name: Install cargo-llvm-cov
  #     uses: taiki-e/install-action@cargo-llvm-cov
  #   - name: Install Clippy
  #     run: rustup component add clippy
  #   - name: Install Cargo Sonar
  #     run: cargo install cargo-sonar
  #   - name: Run Clippy
  #     run: |
  #         cargo clippy --message-format json > my-clippy-report.json
  #         cargo sonar --clippy --clippy-path my-clippy-report.json
  #   - name: Generate code coverage
  #     run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
  #   - name: SonarCloud Scan
  #     uses: SonarSource/sonarcloud-github-action@master
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
  #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #     with:
  #       args: >
  #         -Dsonar.externalIssuesReportPaths=sonar-issues.json
  #         -Dcommunity.rust.lcov.reportPaths=lcov.info
